{"version":3,"file":"static/js/8.1f892971.chunk.js","mappings":"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","sources":["components/user/Logout/Logout.jsx","components/user/Button/Button.styled.js","components/user/Button/Button.jsx","components/user/petsData/PetsData.jsx","components/user/userForm/UserForm.styled.js","components/user/userForm/UserForm.jsx","components/user/userData/UserData.jsx","pages/UserPage.jsx"],"sourcesContent":["export default function Logout() {\n  return (\n    <>\n      <p>Logout</p>\n    </>\n  );\n}\n","import styled from 'styled-components';\nimport variables from '../../../settings/variables';\nconst {\n  colors: { cardBgColor, buttonsHoverBg, secondaryText, buttonsGr },\n  transition: { transitionColor },\n} = variables;\n\nexport const StyledButton = styled.button`\n  padding-top: 9px;\n  padding-bottom: 9px;\n  width: 129px;\n  /* border: 1px solid ${buttonsHoverBg}; */\n  border-radius: 40px;\n  font-family: inherit;\n  font-size: 16px;\n  font-weight: 700;\n  line-height: 1.4;\n  letter-spacing: 0.04em;\n  color: ${props => {\n    return props.$darkType ? secondaryText : buttonsHoverBg;\n  }};\n  background-color: ${props => {\n    return props.$darkType ? buttonsHoverBg : cardBgColor;\n  }};\n  border: ${props => {\n    return props.$darkType ? 'none' : `2px solid ${buttonsHoverBg}`;\n  }};\n  cursor: pointer;\n  transition: ${transitionColor};\n  &:hover {\n    background-image: ${buttonsGr};\n    color: ${secondaryText};\n    place-content: center;\n  }\n`;\n","import { StyledButton } from './Button.styled';\n\nexport default function Button({ type, content, $darkType }) {\n  return (\n    <StyledButton type={type} $darkType={$darkType}>\n      {content}\n    </StyledButton>\n  );\n}\n","import Button from '../Button/Button';\n\nexport default function PetsData() {\n  return (\n    <>\n      <p>PetsData</p>\n      <Button type=\"button\" content=\"Add Pet\" $darkType></Button>\n    </>\n  );\n}\n","// import { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { Form, Field } from 'formik';\nimport styled from 'styled-components';\nimport variables from '../../../settings/variables';\n\nconst {\n  colors: { cardBgColor, buttonsHoverBg, simpleWhite },\n  shadow: { shadowDefault },\n} = variables;\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  padding-top: 20px;\n  padding-right: 24px;\n  padding-bottom: 20px;\n  padding-left: 16px;\n  width: 395px;\n  border-radius: 40px;\n  background-color: ${cardBgColor};\n  box-shadow: ${shadowDefault};\n`;\n\nexport const InputContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 10px;\n  align-items: center;\n`;\n\nexport const StyledInput = styled(Field)`\n  padding: 4px 12px;\n  width: 255px;\n  border: 1px solid ${buttonsHoverBg};\n  border-radius: 20px;\n  font-family: inherit;\n  font-size: 16px;\n  color: ${simpleWhite};\n`;\n\nexport const StyledLabel = styled.label`\n  font-family: inherit;\n  font-size: 18px;\n  font-weight: 600;\n  line-height: 1.39;\n  letter-spacing: 0.04em;\n  color: ${simpleWhite};\n`;\n","// import { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { Formik, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\n\nimport {\n  InputContainer,\n  StyledForm,\n  StyledInput,\n  StyledLabel,\n} from './UserForm.styled';\n\nimport Button from '../Button/Button';\n\n// const yearNow = new Date().getFullYear();\n\nconst phoneRegExp = /^\\+380\\d{9}$/;\n\nconst birthdayRegExp =\n  /^(0[1-9]|1\\d|2\\d|3[01])-(0[1-9]|1[0-2])-(19[0-9]\\d|20[0-6]\\d)$/;\nconst nameRegExp = /^[\\p{Lu}]{1}[\\p{Ll}'`]{1,16}$/u;\nconst cityRegExp = /^[\\p{Lu}]{1}[\\p{Ll}'`]{1,31}$/u;\n\nexport default function UserForm() {\n  const validationSchema = yup.object().shape({\n    name: yup\n      .string()\n      .min(2, 'Name must be at least 2 characters')\n      .max(16, 'Name must be at most 16 characters')\n      .matches(\n        nameRegExp,\n        'Field Name must contain only unicode letter and begin with a capital letter.'\n      ),\n    email: yup.string().email().required('Email is a required field'),\n    birthday: yup\n      // .date()\n      // .transform(currentValue => {\n      //   // check to see if the previous transform already parsed the date\n      //   // if (context.isType(value)) return value;\n\n      //   const formats = 'DD-MM-YYYY';\n      //   // // the default coercion failed so let's try it with Moment.js instead\n      //   // value = moment(currentValue).format(formats);\n      //   // console.log('value', value);\n      //   console.log('org', currentValue);\n\n      //   // if it's valid return the date object, otherwise return an `InvalidDate`\n      //   // return value.isValid() ? value.toDate() : new Date('');\n      // })\n\n      // .typeError('please enter a valid date')\n      // .max(new Date(), \"Your birthday can't be in the future!\")\n      .string()\n      .matches(\n        birthdayRegExp,\n        'Birthday has invalid date format. The format should be DD-MM-YYYY.'\n      )\n      .required('Birthday is a required field'),\n    phone: yup\n      .string()\n      .matches(\n        phoneRegExp,\n        'Phone has invalid phone number format. The format should be +380XXXYYZZ.'\n      ),\n    city: yup\n      .string()\n      .min(2, 'City must be at least 2 characters')\n      .max(32, 'City must be at most 32 characters')\n      .matches(\n        cityRegExp,\n        'City must contain only unicode letter and begin with a capital letter.'\n      ),\n  });\n\n  const initialValues = {\n    name: '',\n    email: '',\n    birthday: '',\n    phone: '',\n    city: '',\n    file: '',\n  };\n\n  // console.log(yearNow);\n\n  const handleSubmit = (values, { resetForm }) => {\n    console.log('values', values);\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={validationSchema}\n      onSubmit={handleSubmit}\n    >\n      <StyledForm autoComplete=\"off\">\n        <input\n          id=\"file\"\n          name=\"file\"\n          type=\"file\"\n          accept=\"image/jpeg, image/jpg, image/png\"\n        />\n        <InputContainer>\n          <StyledLabel htmlFor=\"name\">Name:</StyledLabel>\n          <StyledInput name=\"name\" type=\"text\" />\n          <ErrorMessage component=\"div\" name=\"name\" />\n        </InputContainer>\n\n        <InputContainer>\n          <StyledLabel htmlFor=\"email\">Email:</StyledLabel>\n          <StyledInput name=\"email\" type=\"email\" />\n          <ErrorMessage component=\"div\" name=\"email\" />\n        </InputContainer>\n\n        <InputContainer>\n          <StyledLabel style={{ color: 'red' }} htmlFor=\"birthday\">\n            Birthday:\n          </StyledLabel>\n          <StyledInput name=\"birthday\" type=\"text\" placeholder=\"00-00-0000\" />\n          {/* <Field name=\"birthday\" type=\"date\" /> */}\n          <ErrorMessage component=\"div\" name=\"birthday\" />\n        </InputContainer>\n\n        <InputContainer>\n          <StyledLabel htmlFor=\"phone\">Phone:</StyledLabel>\n          <StyledInput name=\"phone\" type=\"tel\" placeholder=\"+380000000000\" />\n          <ErrorMessage component=\"div\" name=\"phone\" />\n        </InputContainer>\n\n        <InputContainer>\n          <StyledLabel htmlFor=\"city\">City:</StyledLabel>\n          <StyledInput name=\"city\" type=\"text\" />\n          <ErrorMessage component=\"div\" name=\"city\" />\n        </InputContainer>\n\n        <Button\n          style={{\n            color: 'green',\n          }}\n          type=\"submit\"\n          content=\"Save\"\n          $darkType\n        ></Button>\n      </StyledForm>\n    </Formik>\n  );\n}\n","import UserForm from '../userForm/UserForm';\n\nexport default function UserData() {\n  return (\n    <>\n      <p>User Data</p>\n      <UserForm />\n\n      <p>Button Edit</p>\n    </>\n  );\n}\n","import Logout from 'components/user/Logout/Logout';\nimport PetsData from 'components/user/petsData/PetsData';\nimport UserData from 'components/user/userData/UserData';\n\nconst visualHidden = {\n  position: 'absolute',\n  whiteSpace: 'nowrap',\n  width: 1,\n  height: 1,\n  overflow: 'hidden',\n  border: 0,\n  padding: 0,\n  clip: 'rect(0 0 0 0)',\n  WebkitClipPath: 'inset(50%)',\n  clipPath: 'inset(50%)',\n  margin: -1,\n};\n\nexport default function UserPage() {\n  return (\n    <main>\n      <h1 style={visualHidden}>User Page</h1>\n\n      <div\n        style={{\n          display: 'flex',\n          justifyContent: 'space-between',\n        }}\n      >\n        <div>\n          <UserData />\n          <Logout />\n        </div>\n        <PetsData />\n      </div>\n    </main>\n  );\n}\n"],"names":["Logout","_jsx","_Fragment","children","_variables$colors","variables","cardBgColor","buttonsHoverBg","secondaryText","buttonsGr","transitionColor","StyledButton","styled","_templateObject","_taggedTemplateLiteral","props","$darkType","concat","Button","_ref","type","content","PetsData","_jsxs","simpleWhite","shadowDefault","StyledForm","Form","InputContainer","_templateObject2","StyledInput","Field","_templateObject3","StyledLabel","_templateObject4","phoneRegExp","birthdayRegExp","nameRegExp","cityRegExp","UserForm","validationSchema","yup","shape","name","min","max","matches","email","required","birthday","phone","city","Formik","initialValues","file","onSubmit","values","resetForm","console","log","autoComplete","id","accept","htmlFor","ErrorMessage","component","style","color","placeholder","UserData","visualHidden","position","whiteSpace","width","height","overflow","border","padding","clip","WebkitClipPath","clipPath","margin","UserPage","display","justifyContent"],"sourceRoot":""}