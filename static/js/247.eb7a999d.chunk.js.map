{"version":3,"file":"static/js/247.eb7a999d.chunk.js","mappings":"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","sources":["components/title/TitlePage.styled.js","components/title/TitlePage.jsx","images/icons/icons-card.svg","components/notice/noticeCategoryItem/NoticeCategoryItem.styled.js","components/notice/modalNotice/ModalNotice.styled.js","components/notice/modalNotice/ModalNotice.jsx","components/notice/noticeCategoryItem/NoticeCategoryItem.jsx","components/notice/noticesCategoriesList/NoticesCategoriesList.styled.js","components/notice/noticesCategoriesList/NoticesCategoriesList.jsx","components/notice/noticesCategoriesNav/NoticesCategoriesNav.styled.js","components/notice/noticesCategoriesNav/NoticesCategoriesNav.jsx","redux/notices/selectors.js","pages/NoticesPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport variables from 'settings/variables';\n\nexport const TitleContainer = styled.div`\n  margin-top: 40px;\n\n  ${variables.breakPoints.tablet} {\n    margin-top: 80px;\n  }\n`;\n\nexport const Title = styled.h2`\n  text-align: center;\n  font-size: 24px;\n  font-weight: 700;\n  line-height: 1.33;\n\n  ${variables.breakPoints.tablet} {\n    font-size: 48px;\n    line-height: 1.35;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { TitleContainer, Title } from './TitlePage.styled';\n\nconst TitlePage = ({ children }) => {\n  return (\n    <TitleContainer>\n      <Title>{children}</Title>\n    </TitleContainer>\n  );\n};\n\nTitlePage.propTypes = {\n  children: PropTypes.any.isRequired,\n};\n\nexport default TitlePage;\n","var _defs;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgIconsCard(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    \"aria-hidden\": \"true\",\n    style: {\n      position: \"absolute\",\n      width: 0,\n      height: 0,\n      overflow: \"hidden\"\n    },\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"pawprint\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M20.482 19.149c-.356-2.644-2.011-4.897-4.429-6.024s-5.208-.948-7.462.479l-5.432 3.439c-.901.571-1.58 1.399-1.964 2.394s-.436 2.065-.15 3.093c.286 1.028.882 1.918 1.725 2.573s1.852 1.014 2.919 1.037l.07.001a9.697 9.697 0 0 1 6.986 3.289 4.915 4.915 0 0 0 2.67 1.569c1.043.224 2.108.109 3.08-.332s1.757-1.169 2.274-2.103a4.903 4.903 0 0 0 .572-3.044l-.857-6.372zm-2.765 9.812a3.04 3.04 0 0 1-3.563-.766 11.561 11.561 0 0 0-8.423-3.929l-.046-.001a3.04 3.04 0 0 1-2.833-2.236 3.041 3.041 0 0 1 1.31-3.401l5.432-3.439c1.712-1.084 3.829-1.22 5.665-.364s3.093 2.566 3.363 4.574l.857 6.372a3.04 3.04 0 0 1-1.763 3.19zM6.295 12.527c1.103.077 2.165-.346 2.991-1.19.786-.803 1.264-1.901 1.346-3.091S10.391 5.904 9.723 5c-.702-.949-1.696-1.514-2.798-1.59-2.216-.154-4.161 1.766-4.336 4.281-.137 2.003.89 3.786 2.433 4.506.394.184.822.298 1.272.329zM4.461 7.821C4.564 6.339 5.612 5.2 6.797 5.282c.214.015.422.069.618.161.302.141.576.369.8.673.403.546.597 1.257.546 2.002s-.341 1.423-.816 1.908c-.435.444-.975.668-1.52.63h-.001C5.24 10.575 4.36 9.303 4.461 7.821zM14.188 11.529c2.349 1.095 5.275-.191 6.523-2.867s.353-5.746-1.996-6.841c-2.349-1.095-5.275.191-6.523 2.868s-.352 5.745 1.996 6.84zm3.735-8.008c1.411.658 1.9 2.609 1.089 4.348s-2.619 2.618-4.031 1.96-1.9-2.608-1.089-4.347c.811-1.739 2.619-2.619 4.031-1.961zM20.992 16.152a3.83 3.83 0 0 0 1.014.689c1.713.799 3.964.33 5.495-1.289.881-.932 1.401-2.109 1.463-3.315.065-1.262-.371-2.404-1.23-3.217s-2.025-1.184-3.281-1.047c-1.201.131-2.347.716-3.227 1.648-1.858 1.966-1.963 4.896-.234 6.531zm1.596-5.243c.575-.609 1.309-.989 2.067-1.071.701-.076 1.337.118 1.79.546s.682 1.052.645 1.756c-.039.761-.378 1.516-.953 2.124-1.148 1.215-2.878 1.45-3.857.525-.978-.925-.84-2.665.308-3.88zM30.227 19.769v-.001c-1.062-1.952-3.726-2.563-5.94-1.362-2.213 1.203-3.152 3.77-2.093 5.721a3.679 3.679 0 0 0 1.699 1.579c1.243.58 2.833.548 4.241-.215 2.213-1.203 3.152-3.769 2.093-5.722zm-2.988 4.073c-1.307.709-2.831.435-3.397-.609-.566-1.043.035-2.469 1.339-3.178.867-.47 1.83-.508 2.545-.174.362.169.661.433.852.784.565 1.044-.036 2.469-1.339 3.178z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"male\",\n    viewBox: \"0 0 33 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 2,\n    d: \"M17.01 14.667a6.667 6.667 0 1 0 0 13.334 6.667 6.667 0 0 0 0-13.334zm0 0V4m0 0 5.333 5.333M17.01 4l-5.333 5.333\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"heart\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 2,\n    d: \"M5.775 16.063 16 26.666l10.225-10.603A6.403 6.403 0 0 0 28 11.619c0-3.471-2.714-6.285-6.061-6.285a5.954 5.954 0 0 0-4.286 1.841L16 8.89l-1.653-1.715a5.953 5.953 0 0 0-4.286-1.841C6.714 5.334 4 8.148 4 11.619c0 1.667.639 3.266 1.775 4.444z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"female\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 2,\n    d: \"M16 17.333a6.667 6.667 0 1 0 0-13.334 6.667 6.667 0 0 0 0 13.334zm0 0V28m-4-4h8\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"clock\",\n    viewBox: \"0 0 33 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeMiterlimit: 4,\n    strokeWidth: 2,\n    d: \"M16.667 9.333v6.667l4 4M28.667 16c0 6.627-5.373 12-12 12s-12-5.373-12-12c0-6.627 5.373-12 12-12s12 5.373 12 12z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"location\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 2,\n    d: \"M26.667 14.667C26.667 20.558 21.891 25.334 16 28c-5.891-2.667-10.667-7.442-10.667-13.333S10.109 4 16 4s10.667 4.776 10.667 10.667z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 2,\n    d: \"M20 14.667a4 4 0 1 1-8 0 4 4 0 0 1 8 0z\"\n  })))));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgIconsCard);\nexport default __webpack_public_path__ + \"static/media/icons-card.fba5d890d7400cf5aec53aee2e403e7c.svg\";\nexport { ForwardRef as ReactComponent };","import styled from 'styled-components';\nimport variables from 'settings/variables';\n\nexport const Item = styled.li`\n  list-style: none;\n  width: 280px;\n  padding-bottom: 24px;\n  user-select: none;\n  background-color: ${variables.colors.cardBgColor};\n  box-shadow: ${variables.shadow.shadowDefault};\n  border-radius: 0px 0px 40px 40px;\n  ${variables.breakPoints.tablet} {\n    width: 336px;\n  }\n  ${variables.breakPoints.desktop} {\n    width: 288px;\n  }\n  transition: transform 150ms cubic-bezier(0.21, 0.65, 0.66, 0.12);\n\n  &:hover,\n  &:focus {\n    transform: scale(1.02);\n  }\n`;\n\nexport const ImgWrapper = styled.div`\n  height: 288px;\n  width: 100%;\n  margin-bottom: 20px;\n  position: relative;\n`;\n\nexport const Img = styled.img`\n  height: 100%;\n  width: 100%;\n  object-fit: cover;\n`;\n\nexport const Status = styled.div`\n  position: absolute;\n  top: 12px;\n  right: 12px;\n  left: 0;\n  display: flex;\n  align-items: flex-start;\n  justify-content: space-between;\n`;\nexport const StatusText = styled.p`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 11px 17px;\n  width: 126px;\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 19px;\n  color: ${variables.colors.simpleWhite};\n  background-color: ${variables.colors.cardsButtonBg};\n  border-radius: 0px 16px 16px 0px;\n`;\n\nexport const BtnFavorite = styled.button`\n  display: flex;\n  justify-content: center;\n  width: 40px;\n  height: 40px;\n  padding: 0;\n  margin: 0;\n  border-radius: 50%;\n  border: none;\n  cursor: pointer;\n  line-height: 0;\n  align-items: center;\n  background-color: ${variables.colors.cardsButtonBg};\n  color: transparent;\n  transition: ${variables.transition.transitionColor};\n\n  &:hover,\n  &:focus {\n    color: ${variables.colors.buttonsHoverBg};\n  }\n`;\n\nexport const Description = styled.ul`\n  display: flex;\n  justify-content: space-between;\n  position: absolute;\n  bottom: 12px;\n  right: 8px;\n  left: 8px;\n  list-style: none;\n`;\n\nexport const DescriptionItem = styled.li`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  gap: 3px;\n  align-items: center;\n  width: 84px;\n  padding: 2px;\n  border-radius: 16px;\n  color: transparent;\n  user-select: none;\n  background-color: ${variables.colors.cardsButtonBg};\n  transition: ${variables.transition.transitionColor},\n    background-color 250ms cubic-bezier(0.21, 0.65, 0.66, 0.12);\n\n  &.active {\n    color: ${variables.colors.secondaryText};\n    background-color: ${variables.colors.buttonsHoverBg};\n  }\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    right: 0;\n    width: 100%;\n    height: 100%;\n    background: ${variables.colors.buttonsGr};\n    border-radius: 40px;\n    opacity: 0;\n    z-index: 1;\n    transition: opacity 250ms cubic-bezier(0.21, 0.65, 0.66, 0.12);\n  }\n\n  &:hover::before,\n  &:focus::before {\n    opacity: 1;\n  }\n\n  &:hover,\n  &:focus {\n    background-color: ${variables.colors.buttonsHoverBg};\n  }\n`;\n\nexport const Icon = styled.svg`\n  z-index: 2;\n  fill: currentColor;\n  stroke: ${variables.colors.buttonsHoverBg};\n  min-width: 24px;\n\n  transition: stroke 250ms cubic-bezier(0.21, 0.65, 0.66, 0.12);\n\n  ${DescriptionItem}:hover & {\n    stroke: ${variables.colors.secondaryText};\n  }\n`;\n\nexport const DescriptionItemText = styled.span`\n  z-index: 2;\n  font-weight: 600;\n  font-size: 12px;\n  line-height: 16px;\n  letter-spacing: 0.04em;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n\n  color: ${variables.colors.simpleWhite};\n  transition: ${variables.transition.transitionColor};\n\n  ${DescriptionItem}:hover & {\n    color: ${variables.colors.secondaryText};\n  }\n`;\n\nexport const TitleWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  padding-right: 20px;\n  padding-left: 20px;\n  height: 120px;\n`;\n\nexport const Title = styled.p`\n  word-wrap: break-word;\n  width: 231px;\n  max-height: 66px;\n  font-weight: 700;\n  font-size: 24px;\n  line-height: 33px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nexport const BtnLearnIcon = styled.svg`\n  width: 0;\n  height: 0;\n  position: absolute;\n\n  opacity: 0;\n  pointer-events: none;\n  fill: currentColor;\n\n  // transition: opacity #fff;\n`;\n\nexport const BtnLearn = styled.button`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 12px;\n  width: 248px;\n  height: 38px;\n  padding: 6px 28px;\n  margin: 0 auto;\n  border: 2px solid ${variables.colors.buttonsHoverBg};\n  border-radius: 40px;\n  font-weight: 600;\n  font-size: 16px;\n  line-height: 22px;\n  letter-spacing: 0.04em;\n  background: transparent;\n  color: ${variables.colors.buttonsHoverBg};\n  transition: ${variables.transition.transitionColor},\n    background-color 250ms cubic-bezier(0.21, 0.65, 0.66, 0.12);\n\n  &.active {\n    color: ${variables.colors.secondaryText};\n    background-color: ${variables.colors.buttonsHoverBg};\n  }\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    right: 0;\n    width: 100%;\n    height: 100%;\n    background: ${variables.colors.buttonsGr};\n    border-radius: 40px;\n    opacity: 0;\n    transition: opacity 250ms cubic-bezier(0.21, 0.65, 0.66, 0.12);\n  }\n\n  &:hover::before,\n  &:focus::before {\n    z-index: -1;\n    opacity: 1;\n  }\n\n  &:hover,\n  &:focus {\n    background-color: ${variables.colors.buttonsHoverBg};\n  }\n\n  &:hover,\n  &:focus {\n    color: ${variables.colors.secondaryText};\n    background: ${variables.colors.buttonsGr};\n    border: none;\n\n    & > ${BtnLearnIcon} {\n      width: 24px;\n      height: 24px;\n      position: relative;\n      opacity: 1;\n      pointer-events: all;\n    }\n  }\n`;\n\n// @media screen and (min-width: 768px) {\n//     .item {\n//         width: 336px;\n//     }\n\n//     .lowerBlock {\n//         left: 24px;\n//         right: 24px;\n//     }\n// }\n\n// @media screen and (min-width: 1280px) {\n//     .item {\n//         width: 288px;\n//     }\n\n//     .lowerBlock {\n//         left: 12px;\n//         right: 12px;\n//     }\n// }\n","import variables from 'settings/variables';\nimport { styled } from 'styled-components';\n\nexport const ExitButton = styled.button`\n  position: absolute;\n  border: none;\n  /* padding: 0; */\n  background-color: transparent;\n  top: 12px;\n  right: 12px;\n  width: 24px;\n  height: 24px;\n  cursor: pointer;\n  z-index: 100;\n  transition: ${variables.transition.transitionShadow};\n  &:hover,\n  &:focus {\n    box-shadow: ${variables.shadow.shadowHover};\n    border-radius: 50%;\n  }\n\n  ${variables.breakPoints.tablet} {\n    top: 23px;\n    right: 26px;\n  }\n`;\n\nexport const ModalContent = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  min-width: 280px;\n  min-height: 786px;\n  padding-top: 44px;\n  padding-left: 20px;\n  padding-right: 20px;\n  width: fit-content;\n  background-color: white;\n  border-radius: 20px;\n  ${variables.breakPoints.tablet} {\n    min-width: 681px;\n    min-height: 540px;\n  }\n`;\n\nexport const ImgWrapper = styled.div`\n  height: 240px;\n  width: 240px;\n  border-radius: 0px 0px 40px 40px;\n  /* margin-bottom: 20px; */\n  position: relative;\n`;\n\nexport const Img = styled.img`\n  border-radius: 0px 0px 40px 40px;\n  height: 100%;\n  width: 100%;\n  object-fit: cover;\n`;\n\nexport const Status = styled.div`\n  position: absolute;\n  top: 12px;\n  right: 12px;\n  left: 0;\n  display: flex;\n  align-items: flex-start;\n  justify-content: space-between;\n`;\nexport const StatusText = styled.p`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 11px 17px;\n  width: 126px;\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 19px;\n  color: ${variables.colors.simpleWhite};\n  background-color: ${variables.colors.cardsButtonBg};\n  border-radius: 0px 16px 16px 0px;\n`;\n\nexport const TitleWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  padding-top: 12px;\n`;\n\nexport const Title = styled.p`\n  word-wrap: break-word;\n  width: 231px;\n  margin-bottom: 20px;\n  max-height: 66px;\n  font-weight: 700;\n  font-size: 24px;\n  line-height: 33px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\nexport const InformationWrapper = styled.div``;\nexport const DataWrapper = styled.div`\n  display: flex;\n  gap: 2px;\n  margin-bottom: 8px;\n`;\nexport const Data = styled.div`\n  width: 70px;\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 1.35;\n  letter-spacing: 0px;\n`;\nexport const Ditails = styled.div`\n  font-size: 12px;\n  font-weight: 500;\n  line-height: 1.33;\n  letter-spacing: 0px;\n  display: flex;\n  align-content: center;\n  align-items: center;\n  justify-content: center;\n  text-align: left;\n`;\n","import { useCallback, useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport spriteImage from '../../../images/sprite.svg';\n\nimport { ModalWindow } from '../../modal/Modal.styled';\n\nimport CrossIcon from '../../../images/icons/CrossIcon.svg';\nimport {\n  Data,\n  DataWrapper,\n  Ditails,\n  ExitButton,\n  Img,\n  ImgWrapper,\n  InformationWrapper,\n  ModalContent,\n  TitleWrapper,\n  Title,\n} from './ModalNotice.styled';\nimport {\n  BtnFavorite,\n  BtnLearn,\n  Icon,\n  Status,\n  StatusText,\n} from '../noticeCategoryItem/NoticeCategoryItem.styled';\n\nconst BaseUrlImg = 'https://res.cloudinary.com/dfvviqdic/image/upload/';\n\nconst modalRoot = document.body;\n\nconst ModalNotice = ({ onClose, isOpenedModal, data, children }) => {\n  const { photoUrl, category, title, sex } = data;\n\n  const toggleModal = useCallback(\n    e => {\n      if (e.code !== 'Escape') return;\n      onClose();\n    },\n    [onClose]\n  );\n\n  useEffect(() => {\n    window.addEventListener('keydown', toggleModal);\n\n    return () => {\n      window.removeEventListener('keydown', toggleModal);\n    };\n  }, [isOpenedModal, toggleModal]);\n\n  useEffect(() => {\n    const handleKeyDown = e => toggleModal(e);\n\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [toggleModal]);\n\n  const onClickOverlay = e => {\n    if (e.target === e.currentTarget) onClose();\n  };\n\n  return createPortal(\n    <ModalWindow onClick={onClickOverlay}>\n      <ModalContent>\n        <ExitButton onClick={() => onClose()}>\n          <img src={CrossIcon} alt=\"Cross\" width={24} height={24} />\n        </ExitButton>\n        <ImgWrapper>\n          <Img src={BaseUrlImg + photoUrl} alt=\"pet\" loading=\"lazy\" />\n          <Status>\n            <StatusText>{category}</StatusText>\n          </Status>\n        </ImgWrapper>\n        <TitleWrapper>\n          <Title>{title}</Title>\n          <InformationWrapper>\n            <DataWrapper>\n              <Data>Name:</Data>\n              <Ditails></Ditails>\n            </DataWrapper>\n            <DataWrapper>\n              <Data>Birthday:</Data>\n              <Ditails></Ditails>\n            </DataWrapper>\n            <DataWrapper>\n              <Data>Type:</Data>\n              <Ditails></Ditails>\n            </DataWrapper>\n            <DataWrapper>\n              <Data>Place:</Data>\n              <Ditails></Ditails>\n            </DataWrapper>\n            <DataWrapper>\n              <Data>The sex:</Data>\n              <Ditails>{sex}</Ditails>\n            </DataWrapper>\n            <DataWrapper>\n              <Data>Email:</Data>\n              <Ditails></Ditails>\n            </DataWrapper>\n            <DataWrapper>\n              <Data>Phone:</Data>\n              <Ditails></Ditails>\n            </DataWrapper>\n          </InformationWrapper>\n          <BtnLearn>Contact</BtnLearn>\n          <div>\n            <BtnFavorite type=\"button\">\n              <Icon width={24} height={24}>\n                <use href={spriteImage + '#icon-heart'}></use>\n              </Icon>\n            </BtnFavorite>\n          </div>\n        </TitleWrapper>\n      </ModalContent>\n    </ModalWindow>,\n    modalRoot\n  );\n};\n\nexport default ModalNotice;\n","import { toast } from 'react-hot-toast';\nimport icons from '../../../images/icons/icons-card.svg';\nimport variables from 'settings/variables';\nimport {\n  BtnFavorite,\n  BtnLearn,\n  BtnLearnIcon,\n  Description,\n  DescriptionItem,\n  DescriptionItemText,\n  Icon,\n  Img,\n  ImgWrapper,\n  Item,\n  Status,\n  StatusText,\n  Title,\n  TitleWrapper,\n} from './NoticeCategoryItem.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectIsLoggedIn } from 'redux/auth/authSelectors';\nimport { fetchFavorite, putFavorite } from 'redux/notices/operations';\nimport { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport ModalNotice from '../modalNotice/ModalNotice';\nconst BaseUrlImg = 'https://res.cloudinary.com/dfvviqdic/image/upload/';\n\nconst NoticesCategoryItem = ({\n  id: cardId,\n  category,\n  sex,\n  age,\n  location,\n  title,\n  favorite,\n  photoUrl,\n}) => {\n  const params = useParams();\n  const categoryParam = params.categoryName;\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n  const dispatch = useDispatch(cardId);\n\n  const favoriteClickHandle = () => {\n    if (!isLoggedIn) {\n      toast.error('You need to sign in');\n    }\n    dispatch(putFavorite(cardId));\n    if (categoryParam === 'favorite' && favorite) {\n      console.log(categoryParam);\n      dispatch(fetchFavorite());\n    }\n  };\n\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const handleOpenModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n  };\n\n  // MODAL\n  useEffect(() => {\n    // При открытии модального окна\n    if (isModalOpen) {\n      // Сохраняем текущую позицию прокрутки\n      const scrollY = window.scrollY;\n      document.body.style.position = 'fixed'; // Запрещаем прокрутку body\n      document.body.style.top = -`${scrollY}px`; // Запоминаем текущую позицию\n    } else {\n      // При закрытии модального окна\n      const scrollY = parseInt(document.body.style.top || '0', 10);\n      document.body.style.position = '';\n      document.body.style.top = '';\n      window.scrollTo(0, -scrollY); // Восстанавливаем прокрутку\n    }\n  }, [isModalOpen]);\n\n  return (\n    <>\n      <Item>\n        <ImgWrapper>\n          <Img src={BaseUrlImg + photoUrl} alt=\"pet\" loading=\"lazy\" />\n          <Status>\n            <StatusText>{category}</StatusText>\n            <div>\n              <BtnFavorite type=\"button\" onClick={favoriteClickHandle}>\n                <Icon\n                  width={24}\n                  height={24}\n                  color={\n                    favorite ? `${variables.colors.buttonsHoverBg}` : 'current'\n                  }\n                >\n                  <use href={icons + '#heart'}></use>\n                </Icon>\n              </BtnFavorite>\n            </div>\n          </Status>\n          <Description>\n            <DescriptionItem>\n              <Icon width={24} height={24}>\n                <use href={icons + '#location'}></use>\n              </Icon>\n              <DescriptionItemText>{location}</DescriptionItemText>\n            </DescriptionItem>\n            <DescriptionItem>\n              <Icon width={24} height={24}>\n                <use href={icons + '#clock'}></use>\n              </Icon>\n              <DescriptionItemText>{age}</DescriptionItemText>\n            </DescriptionItem>\n            <DescriptionItem>\n              {sex === 'male' ? (\n                <Icon width={24} height={24}>\n                  <use href={icons + '#male'} width={24} height={24}></use>\n                </Icon>\n              ) : (\n                <Icon width={24} height={24}>\n                  <use href={icons + '#female'} width={24} height={24}></use>\n                </Icon>\n              )}\n              <DescriptionItemText>{sex}</DescriptionItemText>\n            </DescriptionItem>\n          </Description>\n        </ImgWrapper>\n        <TitleWrapper>\n          <Title>{title}</Title>\n          <BtnLearn onClick={handleOpenModal}>\n            Learn More\n            <BtnLearnIcon width={24} height={24}>\n              <use href={icons + '#pawprint'}></use>\n            </BtnLearnIcon>\n          </BtnLearn>\n          {isModalOpen && (\n            <ModalNotice\n              onClose={handleCloseModal}\n              data={{ photoUrl, category, title, sex, cardId }}\n            />\n          )}\n        </TitleWrapper>\n      </Item>\n    </>\n  );\n};\n\nexport default NoticesCategoryItem;\n","import styled from 'styled-components';\nimport variables from 'settings/variables';\n\nexport const Container = styled.div`\n  width: 100%;\n  // min-width: 280px;\n  margin: 24px auto;\n  margin-bottom: 40px;\n\n  ${variables.breakPoints.tablet} {\n    width: 768px;\n    // margin-top: 40px;\n    // margin-bottom: 60px;\n  }\n  ${variables.breakPoints.desktop} {\n    width: 1248px;\n    // margin-top: 42px;\n    // margin-bottom: 68px;\n  }\n`;\n\nexport const List = styled.ul`\n  margin: 0 auto;\n  display: flex;\n  row-gap: 24px;\n  flex-direction: column;\n  margin-bottom: 60px;\n  width: 100%;\n  //   list-style: none;\n  align-items: center;\n\n  ${variables.breakPoints.tablet} {\n    gap: 32px;\n    flex-direction: row;\n    flex-wrap: wrap;\n    width: 704px;\n  }\n\n  ${variables.breakPoints.desktop} {\n    width: 1248px;\n  }\n`;\n\nexport const Notification = styled.div`\n  display: flex;\n  justify-content: center;\n  font-size: 24px;\n  color: ${variables.colors.simpleWhite};\n  margin: 0 auto;\n  padding: 20px 0;\n`;\n","import NoticesCategoryItem from '../noticeCategoryItem/NoticeCategoryItem';\n\nimport React from 'react';\nimport { Container, List, Notification } from './NoticesCategoriesList.styled';\n\nconst NoticesCategoriesList = ({ pets, locationCategory }) => {\n  return (\n    <Container>\n      {pets.length === 0 ? (\n        <Notification>\n          <p>Ooops, there is no post for your query</p>\n        </Notification>\n      ) : (\n        <List>\n          {pets.map(\n            ({\n              id,\n              category,\n              sex,\n              age,\n              location,\n              title,\n              favorite,\n              photoUrl,\n            }) => {\n              return (\n                <NoticesCategoryItem\n                  key={id}\n                  id={id}\n                  category={category}\n                  sex={sex}\n                  age={age}\n                  location={location}\n                  title={title}\n                  favorite={favorite}\n                  photoUrl={photoUrl}\n                />\n              );\n            }\n          )}\n        </List>\n      )}\n    </Container>\n  );\n};\nexport default NoticesCategoriesList;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\nimport variables from 'settings/variables';\n\nexport const List = styled.ul`\n  margin-top: 20px;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 8px;\n  ${variables.breakPoints.tablet} {\n    margin-top: 43px;\n    gap: 12px;\n  }\n`;\n\nexport const Item = styled.li`\n  display: flex;\n`;\n\nexport const Button = styled(NavLink)`\n  position: relative;\n  padding: 8px 16px 8px 16px;\n  text-decoration: none;\n  border: none;\n  border-radius: 40px;\n  color: ${variables.colors.buttonsHoverBg};\n  background-color: ${variables.colors.cardsButtonBg};\n\n  transition: ${variables.transition.transitionColor},\n    background-color 250ms cubic-bezier(0.21, 0.65, 0.66, 0.12);\n\n  &.active {\n    color: ${variables.colors.secondaryText};\n    background-color: ${variables.colors.buttonsHoverBg};\n  }\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    right: 0;\n    width: 100%;\n    height: 100%;\n    background: ${variables.colors.buttonsGr};\n    border-radius: 40px;\n    opacity: 0;\n    z-index: -1;\n    transition: opacity 250ms cubic-bezier(0.21, 0.65, 0.66, 0.12);\n  }\n\n  &:hover::before,\n  &:focus::before {\n    opacity: 1;\n  }\n\n  &:hover,\n  &:focus {\n    color: ${variables.colors.secondaryText};\n    background-color: transparent;\n  }\n`;\n","import { useSelector } from 'react-redux';\nimport { selectIsLoggedIn } from 'redux/auth/authSelectors';\nimport { List, Button, Item } from './NoticesCategoriesNav.styled';\n\nexport const filters = [\n  { filter: 'sell', path: 'sell' },\n  { filter: 'lost/found', path: 'lost-found' },\n  { filter: 'in good hands', path: 'for-free' },\n  { filter: 'favorite ads', path: 'favorite' },\n  { filter: 'my ads', path: 'own' },\n];\n\nexport const NoticesCategoriesNav = () => {\n  const isUser = useSelector(selectIsLoggedIn);\n  const items = filters.map(({ filter, path }, item) => {\n    const isAuthPage = path === 'favorite' || path === 'own';\n\n    if (!isUser && isAuthPage) {\n      return null;\n    }\n\n    return (\n      <Item key={item}>\n        <Button to={`/notices/${path}`}>{filter}</Button>\n      </Item>\n    );\n  });\n\n  return <List>{items}</List>;\n};\n","export const selectNotices = state => state.notices.items;\nexport const selectTotalPages = state => state.notices.totalPages;\nexport const selectIsNoticeLoading = state => state.notices.isLoading;\nexport const selectCategory = state => state.notices.category;\n","import NoticesCategoriesList from 'components/notice/noticesCategoriesList/NoticesCategoriesList';\nimport { NoticesCategoriesNav } from 'components/notice/noticesCategoriesNav/NoticesCategoriesNav';\nimport TitlePage from 'components/title/TitlePage';\nimport { useEffect } from 'react';\nimport { fetchByCategory, fetchFavorite } from 'redux/notices/operations';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectNotices } from 'redux/notices/selectors';\nimport { useParams } from 'react-router-dom';\nimport { useResize } from 'hooks/useResize';\n\nconst NoticesPage = () => {\n  const notices = useSelector(selectNotices);\n  const dispatch = useDispatch();\n  const params = useParams();\n  // const [limit, setLimit] = useState(12);\n  const limit = 12;\n\n  const { width } = useResize();\n\n  // const resizeHandler = width => {\n  //   if (width <= 766) {\n  //     setLimit(11);\n  //   } else if (width < 1279) {\n  //     setLimit(10);\n  //   } else if (width >= 1280) {\n  //     setLimit(12);\n  //   }\n  // };\n\n  const locationCategory = params.categoryName;\n  useEffect(() => {\n    document.title = 'YourPet | Find pet';\n    // resizeHandler(width);\n    if (locationCategory !== 'favorite' && locationCategory !== 'own') {\n      dispatch(\n        fetchByCategory({\n          category: locationCategory,\n          limit: limit,\n        })\n      );\n    }\n    if (locationCategory === 'favorite') {\n      dispatch(fetchFavorite());\n    }\n  }, [dispatch, locationCategory, limit, width]);\n\n  return (\n    <>\n      <TitlePage children={'Find your favorite pet'} />\n      <NoticesCategoriesNav />\n      <NoticesCategoriesList\n        pets={notices}\n        locationCategory={locationCategory}\n      />\n    </>\n  );\n};\n\nexport default NoticesPage;\n"],"names":["TitleContainer","styled","_templateObject","_taggedTemplateLiteral","variables","Title","_templateObject2","_ref","children","_jsx","Item","ImgWrapper","Img","_templateObject3","Status","_templateObject4","StatusText","_templateObject5","BtnFavorite","_templateObject6","Description","_templateObject7","DescriptionItem","_templateObject8","Icon","_templateObject9","DescriptionItemText","_templateObject10","TitleWrapper","_templateObject11","_templateObject12","BtnLearnIcon","_templateObject13","BtnLearn","_templateObject14","ExitButton","ModalContent","InformationWrapper","DataWrapper","Data","Ditails","modalRoot","document","body","onClose","isOpenedModal","data","photoUrl","category","title","sex","toggleModal","useCallback","e","code","useEffect","window","addEventListener","removeEventListener","handleKeyDown","createPortal","ModalWindow","onClick","target","currentTarget","_jsxs","src","CrossIcon","alt","width","height","loading","type","href","spriteImage","cardId","id","age","location","favorite","categoryParam","useParams","categoryName","isLoggedIn","useSelector","selectIsLoggedIn","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","isModalOpen","setIsModalOpen","scrollY","style","position","top","concat","parseInt","scrollTo","_Fragment","toast","putFavorite","console","log","fetchFavorite","color","icons","ModalNotice","Container","List","Notification","pets","locationCategory","length","map","_ref2","NoticesCategoryItem","Button","NavLink","filters","filter","path","NoticesCategoriesNav","isUser","items","item","to","selectNotices","state","notices","params","useResize","fetchByCategory","limit","TitlePage","NoticesCategoriesList"],"sourceRoot":""}